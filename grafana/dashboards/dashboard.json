{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_latitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Latitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_longitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Longuitude"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_latitude[rad]\")\r\n  |> map(fn: (r) => ({r with _value: r._value * 180.0 / math.pi}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_longitude[rad]\")\r\n  |> map(fn: (r) => ({r with _value: r._value * 180.0 / math.pi}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        }
      ],
      "title": "Position",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_latitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Latitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_longitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Longuitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_altitude[m]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Altitude"
              },
              {
                "id": "unit",
                "value": "lengthkm"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_altitude[m]\")\r\n  |> map(fn: (r) => ({r with _value: r._value / 1000.0}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Altitude",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "velocityms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_x[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "X Velocity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_y[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Y Velocity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_z[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Z Velocity"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 0,
        "y": 5
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_x[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_y[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_z[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Velocity",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "accMS2"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_x[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "X Acceleration"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_y[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Y Acceleration"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_z[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Z Acceleration"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 12,
        "y": 5
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_x[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_y[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_z[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Acceleration",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "degree"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_latitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Latitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_longitude[rad]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Longuitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_altitude[m]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Altitude"
              },
              {
                "id": "unit",
                "value": "lengthkm"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 0,
        "y": 10
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_latitude[rad]\")\r\n  |> map(fn: (r) => ({r with _value: r._value * 180.0 / math.pi}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_longitude[rad]\")\r\n  |> map(fn: (r) => ({r with _value: r._value * 180.0 / math.pi}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_altitude[m]\")\r\n  |> map(fn: (r) => ({r with _value: r._value / 1000.0}))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Position",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "velocityms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_x[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "X Velocity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_y[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Y Velocity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_velocity_i_z[m/s]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Z Velocity"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 12,
        "y": 10
      },
      "id": 6,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_x[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_y[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_velocity_i_z[m/s]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Velocity",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P951FEA4DE68E13C5"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "accMS2"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_x[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "X Acceleration"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_y[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Y Acceleration"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spacecraft_acceleration_i_z[m/s2]"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Z Acceleration"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 7,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "11.6.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_x[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_y[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "P951FEA4DE68E13C5"
          },
          "hide": false,
          "query": "import \"math\"\r\n\r\nfrom(bucket: \"simulation\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${id}\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"spacecraft_acceleration_i_z[m/s2]\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "C"
        }
      ],
      "title": "Acceleration",
      "type": "stat"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "00a5fdff-99ea-4dfa-bab0-4333e18e2f3c",
          "value": "00a5fdff-99ea-4dfa-bab0-4333e18e2f3c"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurements(bucket: \"simulation\")",
        "label": "Simulation ID",
        "name": "id",
        "options": [],
        "query": {
          "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurements(bucket: \"simulation\")"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2023-02-09T15:00:00.000Z",
    "to": "2023-02-10T14:59:59.000Z"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "New dashboard",
  "uid": "aek4rk7eb8um8d",
  "version": 19
}
